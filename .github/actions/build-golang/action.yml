name: Build Golang
description: Build Golang application

inputs:
  github-token:
    required: true
    description: Github token
  name:
    required: true
    description: Component name

runs:
  using: composite
  steps:
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: hpcsc
        password: ${{ inputs.github-token }}

    - name: Unit test
      shell: bash
      working-directory: ./components/${{ inputs.name }}
      run: |
        ./batect unit-test

    - name: Upload unit coverage reports as artifact
      if: success() || failure()
      uses: actions/upload-artifact@v3
      with:
        name: unit-coverage-report
        path: ./components/${{ inputs.name }}/coverage-unit*

    - name: Integration test
      id: integration-test
      shell: bash
      working-directory: ./components/${{ inputs.name }}
      run: |
        ./batect integration-test

    - name: Upload integration coverage reports as artifact
      if: (success() || failure()) && (steps.integration-test.outcome == 'success' || steps.integration-test.outcome == 'failure')
      uses: actions/upload-artifact@v3
      with:
        name: integration-coverage-report
        path: ./components/${{ inputs.name }}/coverage-integration*

    - name: Component test
      id: component-test
      shell: bash
      working-directory: ./components/${{ inputs.name }}
      run: |
        ./batect component-test

    - name: Upload component coverage reports as artifact
      if: (success() || failure()) && (steps.component-test.outcome == 'success' || steps.component-test.outcome == 'failure')
      uses: actions/upload-artifact@v3
      with:
        name: component-coverage-report
        path: ./components/${{ inputs.name }}/coverage-component*

    - name: Build and push Docker image
      working-directory: ./components/${{ inputs.name }}
      shell: bash
      run: |
        ./scripts/build-docker.sh
      env:
        PUSH: true
